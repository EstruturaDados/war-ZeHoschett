#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_ITENS 10  // Capacidade máxima da mochila
#define ARQUIVO "inventario.txt"  // Nome do arquivo de salvamento

// ---------------------------
// Estrutura de dados: Item
// ---------------------------
typedef struct {
    char nome[30];
    char tipo[20];
    int quantidade;
} Item;

// ---------------------------
// Declaração das funções
// ---------------------------
void inserirItem(Item mochila[], int *contador);
void removerItem(Item mochila[], int *contador);
void listarItens(Item mochila[], int contador);
void buscarItem(Item mochila[], int contador);
void salvarInventario(Item mochila[], int contador);
void carregarInventario(Item mochila[], int *contador);

// ---------------------------
// Função principal
// ---------------------------
int main() {
    Item mochila[MAX_ITENS];
    int contador = 0;
    int opcao;

    carregarInventario(mochila, &contador); // Carrega itens ao iniciar

    do {
        printf("\n=== SISTEMA DE INVENTÁRIO ===\n");
        printf("1. Cadastrar item\n");
        printf("2. Remover item\n");
        printf("3. Listar itens\n");
        printf("4. Buscar item\n");
        printf("0. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);
        getchar(); // Limpa buffer do teclado

        switch(opcao) {
            case 1:
                inserirItem(mochila, &contador);
                break;
            case 2:
                removerItem(mochila, &contador);
                break;
            case 3:
                listarItens(mochila, contador);
                break;
            case 4:
                buscarItem(mochila, contador);
                break;
            case 0:
                salvarInventario(mochila, contador);
                printf("\nInventário salvo! Saindo do sistema...\n");
                break;
            default:
                printf("\nOpção inválida! Tente novamente.\n");
        }
    } while(opcao != 0);

    return 0;
}

// ---------------------------
// Função para inserir novo item
// ---------------------------
void inserirItem(Item mochila[], int *contador) {
    if (*contador >= MAX_ITENS) {
        printf("\nA mochila está cheia! Não é possível adicionar mais itens.\n");
        return;
    }

    Item novoItem;

    printf("\nDigite o nome do item: ");
    fgets(novoItem.nome, sizeof(novoItem.nome), stdin);
    novoItem.nome[strcspn(novoItem.nome, "\n")] = '\0';

    printf("Digite o tipo do item (ex: arma, munição, cura): ");
    fgets(novoItem.tipo, sizeof(novoItem.tipo), stdin);
    novoItem.tipo[strcspn(novoItem.tipo, "\n")] = '\0';

    printf("Digite a quantidade: ");
    scanf("%d", &novoItem.quantidade);
    getchar();

    mochila[*contador] = novoItem;
    (*contador)++;

    salvarInventario(mochila, *contador);

    printf("\nItem adicionado com sucesso!\n");
    listarItens(mochila, *contador);
}

// ---------------------------
// Função para remover item
// ---------------------------
void removerItem(Item mochila[], int *contador) {
    if (*contador == 0) {
        printf("\nA mochila está vazia. Nenhum item para remover.\n");
        return;
    }

    char nomeRemover[30];
    printf("\nDigite o nome do item que deseja remover: ");
    fgets(nomeRemover, sizeof(nomeRemover), stdin);
    nomeRemover[strcspn(nomeRemover, "\n")] = '\0';

    int encontrado = 0;
    for (int i = 0; i < *contador; i++) {
        if (strcmp(mochila[i].nome, nomeRemover) == 0) {
            for (int j = i; j < *contador - 1; j++) {
                mochila[j] = mochila[j + 1];
            }
            (*contador)--;
            encontrado = 1;
            printf("\nItem removido com sucesso!\n");
            salvarInventario(mochila, *contador);
            break;
        }
    }

    if (!encontrado) {
        printf("\nItem não encontrado na mochila.\n");
    }

    listarItens(mochila, *contador);
}

// ---------------------------
// Função para listar todos os itens
// ---------------------------
void listarItens(Item mochila[], int contador) {
    if (contador == 0) {
        printf("\nA mochila está vazia.\n");
        return;
    }

    printf("\n=== ITENS NA MOCHILA ===\n");
    for (int i = 0; i < contador; i++) {
        printf("%d) Nome: %s | Tipo: %s | Quantidade: %d\n",
               i + 1, mochila[i].nome, mochila[i].tipo, mochila[i].quantidade);
    }
    printf("=========================\n");
}

// ---------------------------
// Função para buscar item
// ---------------------------
void buscarItem(Item mochila[], int contador) {
    if (contador == 0) {
        printf("\nA mochila está vazia.\n");
        return;
    }

    char nomeBusca[30];
    printf("\nDigite o nome do item que deseja buscar: ");
    fgets(nomeBusca, sizeof(nomeBusca), stdin);
    nomeBusca[strcspn(nomeBusca, "\n")] = '\0';

    int encontrado = 0;
    for (int i = 0; i < contador; i++) {
        if (strcmp(mochila[i].nome, nomeBusca) == 0) {
            printf("\nItem encontrado!\n");
            printf("Nome: %s\n", mochila[i].nome);
            printf("Tipo: %s\n", mochila[i].tipo);
            printf("Quantidade: %d\n", mochila[i].quantidade);
            encontrado = 1;
            break;
        }
    }

    if (!encontrado) {
        printf("\nItem não encontrado na mochila.\n");
    }
}

// ---------------------------
// Função para salvar inventário em arquivo
// ---------------------------
void salvarInventario(Item mochila[], int contador) {
    FILE *arquivo = fopen(ARQUIVO, "w");
    if (arquivo == NULL) {
        printf("\nErro ao salvar o inventário!\n");
        return;
    }

    for (int i = 0; i < contador; i++) {
        fprintf(arquivo, "%s;%s;%d\n", mochila[i].nome, mochila[i].tipo, mochila[i].quantidade);
    }

    fclose(arquivo);
}

// ---------------------------
// Função para carregar inventário do arquivo
// ---------------------------
void carregarInventario(Item mochila[], int *contador) {
    FILE *arquivo = fopen(ARQUIVO, "r");
    if (arquivo == NULL) {
        // Arquivo ainda não existe — será criado ao salvar
        return;
    }

    *contador = 0;
    while (fscanf(arquivo, "%29[^;];%19[^;];%d\n",
                  mochila[*contador].nome,
                  mochila[*contador].tipo,
                  &mochila[*contador].quantidade) == 3) {
        (*contador)++;
        if (*contador >= MAX_ITENS) break;
    }

    fclose(arquivo);
}
